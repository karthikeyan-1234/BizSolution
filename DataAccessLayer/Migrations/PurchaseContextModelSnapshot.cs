// <auto-generated />
using System;
using DataAccessLayer.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(PurchaseContext))]
    partial class PurchaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Models.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("id"));

                    b.ToTable("Items");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Purchase", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("id"));

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("DataAccessLayer.Models.PurchaseItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("Itemid")
                        .HasColumnType("int");

                    b.Property<int?>("Purchaseid")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("item_id")
                        .HasColumnType("int");

                    b.Property<int>("purchase_id")
                        .HasColumnType("int");

                    b.Property<decimal>("qty")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("id"));

                    b.HasIndex("Itemid");

                    b.HasIndex("Purchaseid");

                    b.ToTable("PurchaseItems");
                });

            modelBuilder.Entity("DataAccessLayer.Models.PurchaseItem", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("Itemid");

                    b.HasOne("DataAccessLayer.Models.Purchase", "Purchase")
                        .WithMany()
                        .HasForeignKey("Purchaseid");

                    b.Navigation("Item");

                    b.Navigation("Purchase");
                });
#pragma warning restore 612, 618
        }
    }
}
